online update of b-trees many scenarios impose a heavy update-load on b-tree indexes in modern databases . a typical case is when b-trees are used for indexing all the keywords of a text field . for example upon the insertion of a new text record (e.g. a new document arrives) , a barrage of new keywords has to be inserted into the index causing many random disk i/os and interrupting the normal operation of the database . the common approach has been to collect the updates in a separate structure and then perform a batch-update of the index . this update `` freezes '' the database . many applications , however , require the immediate availability of the new updates without any interruption of the normal database operation . in this paper we present a novel online b-tree-update method based on a new buffering data-structure we introduce - dynamic bucket tree (dbt) . the dbt-buffer serves as a differential index for new updates . the grouping of keys in dbt-buffer is based on the longest common prefixes (lcp) of their binary-representations . the lcp is used as a measure of the locality of keys to be transferred to the main b-tree . our online update system does not slow down concurrent user transactions or lead to degradation of search-performance . experiments confirm that our dbt buffer can be efficiently used for online-updates of text fields . as such it represents an effective solution to the notorious problem of handling updates to an inverted-index .