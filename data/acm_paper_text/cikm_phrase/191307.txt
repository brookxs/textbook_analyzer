hashing by proximity to process duplicates in spatial-databases in a spatial-database , an object may extend arbitrarily in space . as a result , many spatial-data-structures (e.g. , the quadtree , the cell tree , the r + - tree) represent an object by partitioning it into multiple , yet simple , pieces , each of which is stored separately inside the data-structure . many operations on these data-structures are likely to produce duplicate results because of the multiplicity of object pieces . a novel approach for duplicate processing based on proximity of spatial-objects is presented . this is different from conventional duplicate-elimination in database-systems because , with spatial-databases , different pieces of the same object can span multiple buckets of the underlying data-structure . example algorithms are presented to perform duplicate processing using proximity for quadtree representation of line-segments and arbitrary rectangles . the complexity of the algorithms is seen to depend on a geometric classification of different instances of the spatial-objects . by using proximity and the spatial properties of the objects , the number of disk-i/o requests as well as the run-time storage during duplicate processing can be reduced .