xmltm : efficient transaction-management-for-xml documents a common approach to storage-and-retrieval of xml-documents is to store them in a database , together with materialized-views on their content . the advantage over `` native '' xml-storage-managers seems to be that transactions and concurrency are for free , next to other benefits . but a closer look and preliminary experiments reveal that this results in poor performance of concurrent queries and updates . the reason is that database lock-contention hinders parallelism unnecessarily . we therefore investigate concurrency-control at the semantic , i.e. , xml level and describe a respective transaction manager xmltm . it features a new locking-protocol dglock . it generalizes the protocol for locking on directed-acyclic-graphs by adding simple predicate locking on the content of elements , e.g. , on their text . instead of using the original xml-documents , we propose to take advantage of an abstraction of the xml-document collection known as dataguides . xmltm allows to run xml-processing at the underlying database at low ansi isolation degrees and to release database locks early without sacrificing correctness in this setting . we have built a complete prototype-system that is implemented on top of the xml extender for ibm db2 . our evaluation shows that our approach consistently yields performance-improvements by an order of magnitude . we stress that our approach can also be implemented within a native-xml-storage manager , and we expect even better performance .