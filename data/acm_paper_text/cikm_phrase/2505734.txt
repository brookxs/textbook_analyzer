a generic front-stage for semi-stream processing recently , a number of semi-stream join-algorithms have been published . the typical system setup for these consists of one fast stream input that has to be joined with a disk-based relation r . these semi-stream join approaches typically perform the join with a limited main-memory partition assigned to them , which is generally not large enough to hold the whole relation r . we propose a caching approach that can be used as a front-stage for different semi-stream join-algorithms , resulting in significant performance gains for common applications . we analyze our approach in the context of a seminal semi-stream join , meshjoin (mesh join) , and provide a cost-model for the resulting semi-stream join-algorithm , which we call cmeshjoin (cached mesh join) . the algorithm takes advantage of skewed distributions ; this article presents results for zipfian distributions of the type that appears in many applications .