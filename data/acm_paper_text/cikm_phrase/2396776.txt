parma : a parallel randomized-algorithm for approximate association-rules-mining in mapreduce frequent-itemsets and association-rules-mining (fim) is a key task in knowledge-discovery from data . as the dataset grows , the cost of solving this task is dominated by the component that depends on the number of transactions in the dataset . we address this issue by proposing parma , a parallel-algorithm for the mapreduce framework , which scales well with the size of the dataset (as number of transactions) while minimizing data-replication and communication-cost . parma cuts down the dataset-size-dependent part of the cost by using a random-sampling approach to fim . each machine mines a small random sample of the dataset , of size independent from the dataset size . the results from each machine are then filtered and aggregated to produce a single output collection . the output will be a very close approximation of the collection of frequent-itemsets (fi 's) or association-rules (ar 's) with their frequencies and confidence levels . the quality of the output is probabilistically guaranteed by our analysis to be within the user-specified accuracy and error-probability parameters . the sizes of the random-samples are independent from the size of the dataset , as is the number of samples . they depend on the user-chosen accuracy and error-probability parameters and on the parallel-computational model . we implemented parma in hadoop-mapreduce and show experimentally that it runs faster than previously introduced fim algorithms for the same platform , while 1) scaling almost linearly , and 2) offering even higher accuracy and confidence than what is guaranteed by the analysis .