efficient processing of xml twig patterns with parent-child-edges : a look-ahead approach with the growing importance of semi-structure data in information-exchange , much research has been done to provide an effective mechanism to match a twig-query in an xml-database . a number of algorithms have been proposed recently to process a twig-query holistically . those algorithms are quite efficient for quires with only ancestor-descendant edges . but for queries with mixed ancestor-descendant and parent-child edges , the previous approaches still may produce large intermediate results , even when the input-and-output size are more manageable . to overcome this limitation , in this paper , we propose a novel holistic-twig-join algorithm , namely <i> twigstacklist </i> . our main technique is to look-ahead read some elements in input data steams and cache limited number of them to <i> lists </i> in the main-memory . the number of elements in any list is bounded by the length of the longest-path in the xml-document . we show that <i> twigstacklist </i> is i/o optimal for queries with only ancestor-descendant relationships below branching nodes . further , even when queries contain parent-child relationship below branching nodes , the set of intermediate results in <i> twigstacklist </i> is guaranteed to be a subset of that in previous algorithms . we complement our experimental-results on a range of real and synthetic-data to show the significant superiority of <i> twigstacklist </i> over previous algorithms for queries with <i> parent </i> - <i> child </i> relationships .