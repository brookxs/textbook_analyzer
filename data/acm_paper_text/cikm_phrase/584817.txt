multi-level operator combination in xml-query-processing a core set of efficient access-methods is central to the development of any database-system . in the context of an xml-database , there has been considerable effort devoted to defining a good set of primitive operators and inventing efficient access-methods for each individual operator . these primitive operators have been defined either at the macro-level (using a `` pattern tree '' to specify a selection , for example) or at the micro-level (using multiple explicit containment joins to instantiate a single xpath expression) . in this paper we argue that it is valuable to consider operations at each level . we do this through a study of operator merging : the development of a new access-method to implement a combination of two or more primitive operators . it is frequently the case that access-methods for merged operators are superior to a pipelined-execution of separate access-methods for each operator . we show operator merging to be valuable at both the micro-level and the macro-level . furthermore , we show that the corresponding merged operators are hard to reason with at the other level.specifically , we consider the influence of projections and set-operations on pattern-based selections and containment joins . we show , through both analysis and extensive experimentation , the benefits of considering these operations all together . even though our experimental verification is only with a native xml database , we have reason to believe that our results apply equally to rdbms-based xml-query engines .