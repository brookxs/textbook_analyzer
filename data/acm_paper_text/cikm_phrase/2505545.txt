patric : a parallel-algorithm for counting triangles in massive-networks massive-networks arising in numerous application areas poses significant challenges for network analysts as these networks grow to billions of nodes and are prohibitively large to fit in the main-memory . finding the number of triangles in a network is an important problem in the analysis of complex-networks . several interesting graph-mining applications depend on the number of triangles in the graph . in this paper , we present an efficient mpi-based distributed-memory parallel-algorithm , called patric , for counting triangles in massive-networks . patric scales well to networks with billions of nodes and can compute the exact number of triangles in a network with one billion nodes and 10 billion edges in 16 minutes . balancing computational loads among processors for a graph problem like counting triangles is a challenging issue . we present and analyze several schemes for balancing load among processors for the triangle-counting problem . these schemes achieve very good load-balancing . we also show how our parallel-algorithm can adapt an existing edge sparsification technique to approximate the number of triangles with very high accuracy . this modification allows us to count triangles in even larger networks .