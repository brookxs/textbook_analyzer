being picky : processing top-k-queries with set-defined selections focusing on the top-k items according to a ranking-criterion constitutes an important functionality in many different query-answering scenarios . the idea is to read only the necessary information -- mostly from secondary-storage -- with the ultimate goal to achieve low-latency . in this work , we consider processing such top-k-queries under the constraint that the result items are members of a specific set , which is provided at query time . we call this restriction a set-defined selection criterion . set-defined selections drastically influence the pros-and-cons of an id-ordered index vs. a score-ordered index . we present a mathematical-model that allows to decide at runtime which index to choose , leading to a combined index . to improve the latency around the break even point of the two indices , we show how to benefit from a partitioned score-ordered index and present an algorithm to create such partitions based on analyzing query-logs . further performance gains can be enjoyed using approximate top-k results , with tunable result quality . the presented approaches are evaluated using both real-world and synthetic-data .