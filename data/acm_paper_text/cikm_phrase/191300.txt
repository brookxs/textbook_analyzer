management of disk space with rebate the past decade has witnessed a proliferation of respositories whose workload consists of queries that retrieve information . these repositories provide on-line access to vast amount of data and serve as an integral component of many application-domains (e.g. , library-information-systems , scientific-applications , entertainment industry) . their storage-subsystem is expected to be hierarchical consisting of memory , disk-drives , and one or more tertiary-storage devices . the database resides permanently on the tertiary-storage devices and objects are swapped onto the magnetic disk drives on-demand (and deleted once the disk-storage capacity is exhausted) . this may fragment the disk space over a period of time , resulting in a non-contiguous layout of an object across the surface of a disk-drive . this is undesirable because , once the object is referenced , the disk-drive is required to reposition its read head multiple times (incur seek operations) when retrieving the object , resulting in a low performance . this paper presents the design of rebate . rebate ensures the contiguous layout of each object across the surface of a disk-drive by partitioning the available disk space into regions where each region manages objects of approximately the same size . we describe the tradeoffs of using rebate and its possible limitations .