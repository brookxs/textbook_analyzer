secure search in enterprise webs : tradeoffs in efficient-implementation for document-level-security document-level-security (dls) -- enforcing permissions prevailing at the time of search -- is specified as a mandatory requirement in many enterprise-search applications . unfortunately , depending upon implementation details and values of key parameters , dls may come at a high price in increased query-processing time , leading to an unacceptably slow search experience . in this paper we present a model and a method for carrying out secure search in the presence of dls within enterprise webs . we report on two alternative commercial dls search implementations . using a 10,000 document experimental dls environment , we graph the dependence of query-processing time on result-set size and visibility density for different classes of user . scaled up to collections of tens of thousands of documents , our results suggest that query times will be unacceptable if exact counts of matching documents are required and also for users who can view only a small proportion of documents . we show that the time to conduct access checks is dramatically increased if requests must be sent off-server , even on a local-network , and discuss methods for reducing the cost of security-checks . we conclude that enterprises can effectively reduce dls overheads by organizing documents in such a way that most access checking can be at collection rather than document level , by forgoing accurate match counts , by using caching , batching or hierarchical methods to cut costs of dls checking and , if applicable , by using a single portal both to access and search documents .