linear inclusion for xml regular-expression-types type-inclusion is a fundamental operation in every type-checking compiler , but it is quite expensive for xml-manipulation languages . we recently presented an inclusion checking algorithm for an expressive family of xml type languages which is polynomial , but runs in quadratic time both in the best and in the worst cases . we present here an algorithm that has a linear-time backbone , and resorts to the quadratic approach for some specific parts of the compared types . our experiments show that the new algorithm typically runs in linear-time , hence can be used as a building-block for a practical type-checking compiler .