improving query i/o-performance by permuting and refining block request sequences the i/o-performance of query-processing can be improved using two complementary approaches : improve the buffer and the file-system-management policies of the db buffer-manager and the os file-system manager (e.g. page-replacement) , or improve the sequence of requests that are submitted to a file-system manager and that lead to actual i/o 's (block request sequences) . this paper takes the latter approach . exploiting common file system practices as found in linux , we propose four techniques for permuting and refining block request sequences : block-level-i/o grouping , file-level i/o grouping , i/o ordering , and block recycling . to manifest these techniques , we create two new plan operations , mms and shj , each of which adopts some of the block request refinement techniques above . we implement the new plan operations on top of postgres running on linux , and show experimental-results that demonstrate up to a factor of 4 performance benefit from the use of these techniques .