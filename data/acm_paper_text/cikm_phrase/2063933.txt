building a generic debugger for information-extraction pipelines complex-information extraction (ie) pipelines are becoming an integral component of most text-processing frameworks . we introduce a first system to help ie users analyze extraction pipeline semantics and operator transformations interactively while debugging . this allows the effort to be proportional to the need , and to focus on the portions of the pipeline under the greatest suspicion . we present a generic debugger for running post-execution analysis of any ie pipeline consisting of arbitrary types of operators . for this , we propose an effective provenance model for ie pipelines which captures a variety of operator types , ranging from those for which full to no specifications are available . we have evaluated our proposed algorithms and provenance model on large-scale real-world extraction pipelines .