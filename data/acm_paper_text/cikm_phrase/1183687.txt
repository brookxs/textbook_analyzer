vector and matrix operations programmed with udfs in a relational-dbms in general , a relational-dbms provides limited capabilities to perform multidimensional statistical-analysis , which requires manipulating vectors and matrices . in this work , we study how to extend a dbms with basic vector and matrix operators by programming user-defined-functions (udfs) . we carefully analyze udf features and limitations to implement vector and matrix operations commonly used in statistics , machine-learning and data-mining , paying attention to dbms , operating-system and computer-architecture constraints . udfs represent a c-programming interface that allows the definition of scalar and aggregate-functions that can be used in sql . udfs have several advantages and limitations . a udf allows fast evaluation of arithmetic-expressions , memory-manipulation , using multidimensional-arrays and exploiting all c-language control statements . nevertheless , a udf can not perform disk-i/o , the amount of heap and stack memory that can be allocated is small and the udf code must consider specific architecture characteristics of the dbms . we experimentally compare udfs and sql with respect to performance , ease-of-use , flexibility and scalability . we profile udfs based on call overhead , memory-management and interleaved disk access . we show udfs are faster than standard sql aggregations and as fast as sql arithmetic-expressions .