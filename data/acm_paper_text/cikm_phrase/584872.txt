evaluating continuous-nearest-neighbor queries for streaming-time-series via pre-fetching for many applications , it is important to quickly locate the nearest-neighbor of a given time-series . when the given time-series is a streaming one , nearest-neighbors may need to be found continuously at all time positions . such a standing request is called a continuous-nearest-neighbor query . this paper seeks fast evaluation of continuous-queries on large-databases . the initial strategy is to use the result of one evaluation to restrict the search-space for the next . a more fundamental idea is to extend the existing indexing-methods , used in many traditional nearest-neighbor-algorithms , with pre-fetching . specifically , pre-fetching is to predict the next value of the stream before it arrives , and to process the query as if the predicted value were the real one in order to load the needed index pages and time-series into the allocated cache-memory . furthermore , if the pre-fetched candidates can not fit into the cache-memory , they are stored in a sequential file to facilitate fast access to them . experiments show that pre-fetching improves the response-time greatly over the direct use of traditional algorithms , even if the caching provided by the operating-system is taken into consideration .