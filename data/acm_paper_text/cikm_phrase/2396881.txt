pay-as-you-go maintenance of precomputed nearest-neighbors in large-graphs an important building-block of many graph applications such as searching in social-networks , keyword-search in graphs , and retrieval of linked documents is retrieving the transitive neighbors of a node in ascending order of their distances . since large-graphs can not be kept in memory and graph-traversals at query time would be prohibitively expensive , the list of neighbors for each node is usually precomputed and stored in a compact form . while the problem of precomputing all-pairs shortest distances has been well studied for decades , efficiently maintaining this information when the graph changes is not as well understood . this paper presents an algorithm for maintaining nearest-neighbor lists in weighted-graphs under node insertions and decreasing edge weights . it considers the important case where queries are a lot more frequent than updates , and presents two approaches for transparently performing necessary index-updates while executing queries . extensive experiments with large-graphs , including a subset of twitter 's user graph , demonstrate that the overhead for this maintenance is small .