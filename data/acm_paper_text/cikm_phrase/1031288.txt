on structuring formal , semi-formal and informal data to support traceability in systems-engineering environments the development of large , complex-systems poses a number of challenges for systems engineers , not least of which is the ability to ensure user-requirements have been satisfied . effective requirements-management - an amalgam of information-capture , information <i> storage </i> and <i> management </i> , and information <i> dissemination </i> activities - is crucial in that respect . in this paper we concentrate on one of the core issues of <i> information-management </i> in a requirements-management context - namely <i> traceability </i> . traceability is the common term for mechanisms to record and navigate relationships between artifacts produced by development-processes . however , realising effective traceability in systems-engineering environments is complicated by the fact that engineers use a range of notations to describe complex-systems . these range from natural-language (informal) , to graphical notations such as statecharts (semi-formal) to languages with a well defined (formal) semantics such as vdm-sl and spark-ada . most have tool-support , although a lack of well-defined approaches to integration leads to inconsistencies and limits traceability between their respective data-sets (internal models) . this paper demonstrates an approach based on meta-modelling that enables traceability-links to be established and consistency maintained between tools .