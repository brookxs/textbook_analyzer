deco : declarative crowdsourcing crowdsourcing enables programmers to incorporate `` human-computation '' as a building-block in algorithms that can not be fully automated , such as text-analysis and image-recognition . similarly , humans can be used as a building-block in data-intensive-applications -- providing , comparing , and verifying data used by applications . building upon the decades-long success of declarative approaches to conventional data-management , we use a similar approach for data-intensive-applications that incorporate humans . specifically , declarative-queries are posed over stored relational-data as well as data computed on-demand from the crowd , and the underlying system orchestrates the computation of query answers . we present deco , a database-system for declarative crowdsourcing . we describe deco 's data-model , query-language , and our prototype . deco 's data-model was designed to be general (it can be instantiated to other proposed models) , flexible (it allows methods for data-cleansing and external access to be plugged in) , and principled (it has a precisely-defined semantics) . syntactically , deco 's query-language is a simple extension to sql . based on deco 's data-model , we define a precise-semantics for arbitrary queries involving both stored data and data obtained from the crowd . we then describe the deco query-processor which uses a novel push-pull hybrid execution-model to respect the deco semantics while coping with the unique combination of latency , monetary cost , and uncertainty introduced in the crowdsourcing environment . finally , we experimentally explore the query-processing alternatives provided by deco using our current prototype .