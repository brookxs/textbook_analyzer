efficient processing of streaming graphs for evolution-aware clustering the clustering of vertices often evolves with time in a streaming graph , where graph update events are given as a stream of edge (vertex) insertions and deletions . although a sliding-window in stream-processing naturally captures some cluster evolution , it alone may not be adequate , especially if the window-size is large and the clustering within the windowed stream is unstable . prior graph-clustering approaches are mostly insensitive to clustering evolution . in this paper , we present an efficient approach to processing streaming graphs for evolution-aware clustering (eac) of vertices . we incrementally manage individual connected-components as clusters subject to a constraint on the maximal-cluster size . for each cluster , we keep the relative recency of edges in a sorted order and favor more recent edges in clustering . we evaluate the effectiveness of eac and compare it with a previous state-of-the-art evolution-insensitive clustering (eic) approach . the results show that eac is both effective and efficient in capturing evolution in a streaming graph . moreover , we implement eac as a streaming graph operator on ibm 's infosphere streams , a large-scale distributed middleware for stream-processing , and show snapshots of the user cluster evolution in a streaming twitter mention graph .