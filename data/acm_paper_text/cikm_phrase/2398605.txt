fast pca computation in a dbms with aggregate udfs and lapack efficient and scalable-execution of numerical-methods inside a dbms is difficult as its architecture is not suited for intense numerical computations . we study computing principal-component-analysis (pca) on large-data-sets via singular-value-decomposition (svd) . given the difficulty to program and optimize numerical-methods on an existing dbms , we explore an alternative reusability approach : calling the well-known numerical-library lapack . thus we study several alternatives to summarize the data-set with aggregate user-defined-functions (udfs) and how to efficiently call svd numerical-methods available in lapack via stored procedures (sps) . we propose algorithmic and system optimizations to enhance scalability and to push-processing into ram . we show it is feasible to efficiently solve pca by first summarizing the data-set with arrays incrementally updated with aggregate udfs and then pushing heavy matrix processing in svd to ram calling lapack via sps . we benchmark our solution on a modern dbms . our solution requires only one pass on the data-set and it exhibits linear scalability .