mtops : scalable-processing of continuous top-k multi-query workloads a continuous top-k-query retrieves the k most preferred objects in a data-stream according to a given preference function . these queries are important for a broad spectrum of applications ranging from web-based advertising to financial-analysis . in various streaming-applications , a large number of such continuous top-k-queries need to be executed simultaneously against a common popular input stream . to efficiently handle such top-k-query workload , we present a comprehensive framework , called mtops.within this mtops framework , several computational components work collaboratively to first analyze the commonalities across the workload ; organize the workload for maximized sharing opportunities ; execute the workload queries simultaneously in a shared manner ; and output query results whenever any input query requires . in particular , mtops supports two proposed algorithms , mtopband and mtoplist , which both incrementally maintain the top-k objects over time for multiple-queries . as the foundation , we first identify the minimal object set from the data-stream that is both necessary and sufficient for accurately answering all top-k-queries in the workload . then , the mtopband algorithm is presented to incrementally maintain such minimum object set and eliminate the need for any recomputation from scratch . to further optimize mtop-band , we design the second algorithm , mtoplist which organizes the progressive top-k-results of workload queries in a compact structure . mtoplist is shown to be memory optimal and also more efficient in terms of cpu-time usage than mtopband . our experimental-study , using real-data streams from domains of stock trades and moving-object monitoring , demonstrates that both the efficiency and scalability of our proposed techniques are clearly superior to the state-of-the-art solutions .