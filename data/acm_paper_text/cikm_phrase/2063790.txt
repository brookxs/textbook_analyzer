semi-indexing semi-structured-data in tiny space semi-structured textual-formats are gaining increasing popularity for the storage of document-collections and rich logs . their flexibility comes at the cost of having to load and parse a document entirely even if just a small part of it needs to be accessed . for instance , in data-analytics massive collections are usually scanned sequentially , selecting a small number of attributes from each document . we propose a technique to attach to a raw , unparsed document (even in compressed form) a `` semi-index '' : a succinct-data-structure that supports operations on the document tree at speed comparable with an in-memory deserialized object , thus bridging textual-formats with binary formats . after describing the general technique , we focus on the json format : our experiments show that avoiding the full loading and parsing step can give speedups of up to 12 times for on-disk documents using a small-space overhead .