efficient lca_based keyword-search in xml-data keyword-search in xml-documents based on the notion of lowest common ancestors (lcas) and modifications of it has recently gained research interest [2 , 3 , 4] . in this paper we propose an efficient-algorithm called indexed stack to find answers to keyword-queries based on xrank 's semantics to lca [2] . the complexity of the indexed stack algorithm is o (kd | s 1 | \ log | s |) where k is the number of keywords in the query , d is the depth of the tree and | s 1 | (| s |) is the occurrence of the least (most) frequent keyword in the query . in comparison , the best worst-case-complexity of the core-algorithms in [2] is o (kd | s |) . we analytically and experimentally evaluate the indexed stack algorithm and the two core-algorithms in [2] . the results show that the indexed stack algorithm outperforms in terms of both cpu and i/o costs other algorithms by orders of magnitude when the query contains at least one low frequency keyword along with high-frequency keywords .