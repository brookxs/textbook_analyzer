characterizing , constructing and managing resource-usage profiles of system-s applications : challenges and experience we describe the challenges of characterizing , constructing and managing the usage-profiles of system-s applications . a running system-s application is a directed-graph with software processing-elements (pes) as vertices and data-streams as edges connecting the pes . the resource-usage of each pe is a critical-input to the runtime scheduler for proper resource-allocation . we represent the resource-usage of pes in terms of resource functions (rfs) that are used by the system-s scheduler , with one rf per resource per pe . the first challenge is that it is difficult to build good rfs that can accurately predict the resource-usage of a pe because the pes perform arbitrary computations . a second set of challenges arises in managing the rfs and performance data so that we can apply them for pes that are re-run or reused by the same or different applications or users . we report our experience in overcoming these challenges . specifically , we present an empirical characterization of pe rfs from several real streaming-applications running in a system-s testbed . this indicates that our simple models of resource-usage that build on the data-flow nature of the underlying application can be effective , even for complex pes . to illustrate our methodology , we evaluate and analyze the performance of these applications as a function of the quality of our resource profile models . the system automatically learns the models from the raw metrics data collected from running pes . we describe our approach to managing the metrics and rf models , which allows us to construct generalizable rfs and eliminates the learning-time for new pes by intelligently storing and reusing the metrics data .