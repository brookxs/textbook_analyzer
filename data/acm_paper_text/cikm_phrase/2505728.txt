a new operator for efficient stream-relation join-processing in data-streaming engines in the last decade , stream-processing engines (spes) have emerged as a new processing-paradigm that can process huge amounts of data while retaining low-latency and high-throughputs . yet , it is often necessary to join streaming-data with traditional databases to provide more contextual-information for the end-users and applications . the major problem that we confront is to join the fast arriving stream tuples with the static relation tuples that are on a slow database . this is what we call the stream-relation join (srj) problem . currently , spes use a naive tuple-by-tuple approach for srj processing where the spe accesses the database for every incoming tuple . some spes use cache to avoid accessing the database for every incoming tuple , while others do not because of the stochastic nature of streaming-data . in this paper , we propose a new srj operator to facilitate srj processing regardless of the cache-performance using two techniques : batching and out-of-order-processing . the proposed operator provides an effective generic solution to the srj problem and the cost of incorporating our operator into different spes is minimal . our experiments use a variety of synthetic and real-data sets demonstrating that our operator outperforms the state-of-the-art tuple-by-tuple approach in terms of maximizing the throughput under ordering and memory-constraints .