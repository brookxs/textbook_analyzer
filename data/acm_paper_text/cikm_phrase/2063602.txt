query-session detection as a cascade we propose a cascading-method for query-session detection , the problem of identifying series of consecutive queries a user submits with the same information-need . while the existing session-detection research mostly deals with effectiveness , our focus also is on efficiency , and we investigate questions related to the analysis trade-off : how expensive (in terms of runtime) is a certain improvement in f-measure ? in this regard , we distinguish two major scenarios where query-session knowledge is important : (1) in an online setting , the search-engine tries to incorporate knowledge of the preceding queries for an improved retrieval-performance . obviously , the efficiency of the session-detection method is a crucial issue as the overall retrieval-time should not be influenced too much . (2) in an offline post-retrieval setting , search-engine-logs are divided into sessions in order to examine what causes users to fail or to identify typical reformulation patterns etc. . here , efficiency might not be as important as in the online scenario but the accuracy of the detected sessions is essential . our cascading-method provides a sensible treatment for both scenarios . it involves different steps that form a cascade in the sense that computationally costly and hence time-consuming features are applied only after cheap features `` failed . '' this is different to previous session-detection methods , most of which involve many features simultaneously . experiments on a standard test-corpus show the cascading-method to save runtime compared to the-state-of-the-art while the detected sessions ' accuracy is even superior .