linear-time membership in a class of regular-expressions with interleaving and counting the extension of regular-expressions (res) with an interleaving (shuffle) operator has been proposed in many occasions , since it would be crucial to deal with unordered data . however , interleaving badly affects the complexity of basic operations , and , expecially , makes membership np-hard [13] , which is unacceptable for most uses of res . res form the basis of most xml type languages , such as dtds and xml-schema types , and xduce types [16 , 11] . in this context , the interleaving operator would be a natural addition to the language of res , as witnessed by the presence of limited forms of interleaving in xsd (the all group) , relax-ng , and sgml , provided that the np-hardness of membership could be avoided . we present here a restricted class of res with interleaving and counting which admits a linear membership algorithm , and which is expressive enough to cover the vast majority of real-world xml-types . we first present an algorithm for membership of a list of words into a re with interleaving and counting , based on the translation of the re into a set of constraints . we generalize the approach in order to check membership of xml-trees into a class of edtds with interleaving and counting , which models the crucial aspects of dtds and xsd schemas .