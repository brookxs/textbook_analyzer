typed functional-query-languages with equational specifications we present a framework for functionally modeling query-languages and data-models . data and queries are uniformly represented by first-order functions , and query-language constructs by polymorphic higher-order-functions . the functions are typed by a database-oriented type-system that supports polymorphism and nesting of types , thus one can perform static type-checking and type-inferencing of query-expressions . the query-language can be freely extended by introducing new querying constructs as polymorphic higher-order functions.while type information gives the input-output description of the functions , the semantic information is captured by equational specifications . knowledge about the functions is represented as equalities of functional expressions in the form of equations . by equational axiomatization of the query-language , database problems of query-equivalence and answering-query with views can be posed as equational word-problems and equational-matching .