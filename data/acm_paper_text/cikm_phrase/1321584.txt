computing explanations for unlively queries in databases a query is unlively if it always returns an empty answer . debugging a database-schema requires not only determining unlively queries , but also fixing them . to the best of our knowledge , the existing methods do not provide the designer with an explanation of why a query is not lively . in this paper , we propose a method for computing explanations that is independent of the particular method used to determine liveliness . it provides three levels of search : one explanation , a maximal set of non-overlapping explanations , and all explanations . the first two levels require only a linear number of calls to the underlying method . we also propose a filter to reduce the number of these calls , and experimentally compare our method with the best known method for finding unsatisfiable subsets of constraints .