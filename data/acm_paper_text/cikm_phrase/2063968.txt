a robust index-for-regular-expression-queries the like regular-expression predicate has been part of the sql standard since at least 1989 . however , despite its popularity and wide usage , database vendors provide only limited indexing support for regular-expression queries which almost always require a full table scan . in this paper we propose a rigorous and robust-approach for providing indexing support for regular-expression queries . our approach consists of formulating the indexing problem as a combinatorial-optimization problem . we begin with a database , abstracted as a collection of strings . from this data-set we generate a query workload . the input to the optimization-problem is the database and the workload . the output is a set of multigrams (substrings) which can be used as keys to records which satisfy the query workload . the multigrams can then be integrated with the data-structure (like b + trees) to provide indexing support for the queries . we provide a deterministic and a randomized approximation-algorithm (with provable guarantees) to solve the optimization-problem . extensive experiments on synthetic-data sets demonstrate that our approach is accurate and efficient . we also present a case-study on prosite patterns - which are complex regular-expression signatures for classes of proteins . again , we are able to demonstrate the utility of our indexing-approach in terms of accuracy and efficiency . thus , perhaps for the first time , there is a robust and practical indexing-mechanism for an important class of database queries .