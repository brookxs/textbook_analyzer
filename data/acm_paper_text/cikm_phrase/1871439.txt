search-engine support for software applications question-answering , computer-assisted-language-learning , text-mining , and other software applications that use a full-search engine to find information in a large text corpus are becoming common . a software application may use metadata and text-annotations to reduce the mismatch between the concept-based representations convenient for inference and the word-based representations typically used for text-retrieval . software applications may also be able to specify detailed requirements that retrieved passages must satisfy . this use of text-search is very different than the ad-hoc , interactive-search that information-retrieval-research typically studies . search-engine developers are beginning to respond by extending indexing-and-retrieval models developed for structured (e.g. , xml) documents to support multiple-representations of document-content , text-annotations , metadata , and relationships . these new requirements force developers to reconsider basic assumptions about index data structures and ranked-retrieval models . how best to use these new capabilities is an open problem . straightforward transformation of a detailed information-need into a complex structured-query can produce a query that is effective for exact-match retrieval , but a challenge for the retrieval-model to use effectively for best-match retrieval . bag-of-words retrieval is often disparaged , but its advantage is that it is robust : it works well even when desired documents do not exactly meet expectations . this talk discusses some of the problems encountered when extending a search-engine to support queries posed by other software applications and structured-documents with derived annotations