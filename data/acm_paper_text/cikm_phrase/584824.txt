a self-managing data-cache for edge-of-network web-applications database-caching at proxy-servers enables dynamic-content to be generated at the edge of the network , thereby improving the scalability and response-time of web-applications . the scale of deployment of edge servers coupled with the rising costs of their administration demand that such caching middleware be adaptive and self-managing . to achieve this , a cache must be dynamically populated and pruned based on the application query stream and access-pattern . in this paper , we describe such a cache which maintains a large number of materialized-views of previous query results . cached `` views '' share physical storage to avoid redundancy , and are usually added and evicted dynamically to adapt to the current workload and to available resources . these two properties of large-scale (large number of cached views) and overlapping storage introduce several challenges to query-matching and storage-management which are not addressed by traditional approaches . in this paper , we describe an edge data-cache architecture with a flexible-query matching-algorithm and a novel storage-management policy which work well in such an environment . we perform an evaluation of a prototype of such an architecture using the tpc-w benchmark and find that it reduces query response-times by up to 75 \ % , while reducing network and server load .