evaluating window joins over punctuated streams we explore join optimizations in the presence of both time-based constraints (sliding-windows) and value-based constraints (punctuations) . we present the first join solution named pwjoin that exploits such combined constraints to shrink the runtime join state and to propagate punctuations to benefit downstream operators . we design a state structure for pwjoin that facilitates the exploitation of both constraint types . we also explore optimizations enabled by the interactions between window and punctuation , e.g. , early punctuation propagation . the costs of the pwjoin are analyzed using a cost-model . we also conduct an experimental-study using cape continuous-query system . the experimental-results show that in most cases , by exploiting punctuations , pwjoin outperforms the pure window join with regard to both memory overhead and throughput . our technique complements the joins in the literature , such as symmetric hash-join or window join , to now require less runtime resources without compromising the accuracy of the result .