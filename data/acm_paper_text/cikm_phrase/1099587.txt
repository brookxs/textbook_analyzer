adaptive load-shedding for windowed stream-joins we present an adaptive load-shedding approach for windowed stream-joins . in contrast to the conventional approach of dropping tuples from the input streams , we explore the concept of selective processing for load-shedding . we allow stream tuples to be stored in the windows and shed excessive cpu load by performing the join operations , not on the entire set of tuples within the windows , but on a dynamically changing subset of tuples that are learned to be highly beneficial . we support such dynamic selective processing through three forms of runtime adaptations : adaptation to input stream rates , adaptation to time-correlation between the streams and adaptation to join directions . indexes are used to further speed up the execution of stream-joins . experiments are conducted to evaluate our adaptive load-shedding in terms of output rate . the results show that our selective processing-approach to load-shedding is very effective and significantly outperforms the approach that drops tuples from the input streams .