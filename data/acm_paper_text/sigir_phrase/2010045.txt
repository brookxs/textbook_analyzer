posting-list-intersection on multicore-architectures in current commercial web-search-engines , queries are processed in the conjunctive mode , which requires the search-engine to compute the intersection of a number of posting lists to determine the documents matching all query terms . in practice , the intersection operation takes a significant fraction of the query-processing time , for some queries dominating the total query latency . hence , efficient posting-list-intersection is critical for achieving short query latencies . in this work , we focus on improving the performance of posting-list-intersection by leveraging the compute capabilities of recent multicore-systems . to this end , we consider various coarse-grained and fine-grained parallelization models for list-intersection . specifically , we present an algorithm that partitions the work associated with a given query into a number of small and independent-tasks that are subsequently processed in parallel . through a detailed empirical-analysis of these alternative models , we demonstrate that exploiting parallelism at the finest-level of granularity is critical to achieve the best performance on multicore-systems . on an eight-core system , the fine-grained parallelization method is able to achieve more than five times reduction in average query-processing time while still exploiting the parallelism for high query throughput .