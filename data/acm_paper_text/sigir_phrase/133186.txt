a textual object-management system computer programs that access significant amounts of text usually include code that manipulates the textual objects that comprise it . such programs include electronic-mail readers , typesetters and , in particular , full-text-information-retrieval systems . such code is often unsatisfying in that access to textual objects is either efficient , or flexible , but not both . a programming-language like awk or perl provides very general facilities for describing textual objects , but at the cost of rescanning the text for every textual object . at the other extreme , full-text-information-retrieval systems usually offer access to a very limited number of kinds of textual objects , but this access is very efficient . the system described in this paper is a programming-tool for managing textual objects . it provides a great deal of flexibility , giving access to very complex document-structure , with a large number of constituent kinds of textual objects . further , it provides access to these objects very efficiently , both in terms of time and auxiliary space , by being very careful to access secondary-storage only when absolutely necessary .