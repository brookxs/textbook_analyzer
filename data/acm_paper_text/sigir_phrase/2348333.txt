supporting efficient top-k-queries in type-ahead-search type-ahead-search can on-the-fly find answers as a user-types in a keyword-query . a main challenge in this search paradigm is the high-efficiency requirement that queries must be answered within milliseconds . in this paper we study how to answer top-k-queries in this paradigm , i.e. , as a user-types in a query letter by letter , we want to efficiently find the k best-answers . instead of inventing completely new algorithms from scratch , we study challenges when adopting existing top-k-algorithms in the literature that heavily rely on two basic list-access methods : random-access and sorted access . we present two algorithms to support random-access efficiently . we develop novel techniques to support efficient sorted access using list pruning and materialization . we extend our techniques to support fuzzy type-ahead-search which allows minor errors between query keywords and answers . we report our experimental-results on several real large-data-sets to show that the proposed techniques can answer top-k-queries efficiently in type-ahead-search .