from harvesting to cultivating : transformation of a web collecting system into a robust curation environment much has been written about the lifecycle of digital-objects . this study is instead concerned with the lifecycle of collections and associated services . online collection environments are built to fulfill specific collecting objectives and-constraints . if a collection proves useful within its original hosting environment , it will often be necessary or desirable to move the collection to new environments , in order to support new forms of use and re-aggregation or extract resources from legacy-data environments . such a transformation can be extremely expensive , challenging and prone to error , especially if the collections include complex internal structures and services . when `` services make the repository '' [1] , moving raw data from one location to another will often not be sufficient . digital curators can pre-empt costly and problematic system migration efforts by integrating collections into environments specifically designed to support long-term-preservation , scalability and interoperability [2] . we report on an integration of content and functionality of a feature-rich collecting environment (contextminer) into a robust data curation environment (irods) . contextminer is a web-based-service for building collections , through the execution and management of `` campaigns '' (i.e. sets of associated queries and parameters to harvest content over time) . as a part of the vidarch project , we have been using the contextminer framework and services for harvesting youtube-videos and associated contextual-information on a variety of topics . in july 2008 , we released a public beta of contextminer , allowing anyone to run similar crawls . there are now more than 100 users . the current implementation - based on a single mysql-database and associated code - has served its intended purposes very well , but it is not a scalable or sustainable basis for offering wide-scale collecting services in support of the diverse array of potential users and use-cases . irods (integrated rule-oriented data system) , is adaptive policy-driven data-grid middleware , which addresses aspects of growth , evolution , openness , and closure - fundamental requirements for digital-preservation [3] . irods currently scales to hundreds of millions of files , tens of thousands of users , and petabytes of data . it operates in a highly distributed-environment with heterogeneous storage resources and allows for growth through federation . it supports evolution through the virtualization of the underlying technology and supports changing business requirements through customization of repository behaviors . it supports openness through a data-type agnostic treatment of content . irods can be instrumented with policies that support the management of the lifecycle of digital-assets and will serve as a unique platform to study repository integration . one key feature is the automation of policy-enforcement across distributed-data that have been organized into a shared collection . the coupling of other open repositories and irods can create greater efficiencies and new types of repository services . we discuss various repository integration scenarios , their potential benefits , and implications for collection life cycles . the approaches co-locate metadata and content in varied ways and rely on efficiencies found in one repository only , or on the ability to combine policies in both spaces : (1) irods to contexminer data-migration , (2) policy-based data-management for contextminer collections , and (3) policy interchange between contextminer and irods collections .