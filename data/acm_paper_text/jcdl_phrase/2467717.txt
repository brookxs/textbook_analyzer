an evaluation of caching policies for memento timemaps as defined by the memento framework , timemaps are machine-readable lists of time-specific copies -- called `` mementos '' -- of an archived original resource . in theory , as an archive acquires additional mementos over time , a timemap should be monotonically increasing . however , there are reasons why the number of mementos in a timemap would decrease , for example : archival redaction of some or all of the mementos , archival restructuring , and transient-errors of one or more archives . we study timemaps for 4,000 original resources over a three month period , note their change-patterns , and develop a caching-algorithm for timemaps suitable for a reverse-proxy in front of a memento aggregator . we show that timemap cardinality is constant or monotonically increasing for 80.2 % of all timemap downloads in the observation period . the goal of the caching-algorithm is to exploit the ideally monotonically increasing nature of timemaps and not cache responses with fewer mementos than the already cached timemap . this new caching-algorithm uses conditional cache-replacement and a time to live (ttl) value to ensure the user has access to the most complete timemap available . based on our empirical-data , a ttl of 15 days will minimize the number of mementos missed by users , and minimize the load on archives contributing to timemaps .