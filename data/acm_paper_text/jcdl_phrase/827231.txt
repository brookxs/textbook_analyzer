an xquery engine for digital-library-systems xml is now a standard markup-language for web-information . many application areas are producing xml-documents on the web . this situation urges digital-library-systems to deal with not only typical text-documents but also xml-documents . xml-documents are semi-structured . some queries based on the structures are useful and necessary.mpeg-7 is a metadata-standard for multimedia objects . mpeg-7 metadata can describe some features such as color-histogram of image , so that a multimedia digital-library-system using mpeg-7 for metadata representation can provide content-based-search for multimedia objects . mpeg-7 is defined by xml-schema . in order to retrieve mpeg-7 metadata , a query-language for xml-data is required.a standard query-language is very helpful for interoperability among digital-library-systems over the-internet . xquery , which has been influenced from most of the previous xml-query-languages , is a forthcoming standard for querying xml data.in this paper we propose an xquery engine as depicted in the figure that can be used as an xquery-processing module in a-digital library system that supports xml-documents . we assume generic digital-library-system architecture . it consists of four modules : a user-interface , an xquery engine , an information-retrieval-engine , and an xml repository . the user-interface module gives a user an easy way to search xml-documents and transforms a given user-query to an equivalent xquery . the xquery engine module takes an xquery as input and provides a query-plan for an information-retrieval module as output . the information-retrieval-engine executes a query-plan by communicating with the xml repository , which stores xml documents.the xquery engine parses an input xquery and constructs a syntax-tree for the query . then , it transforms the syntax-tree into a query-plan , called a primitive operation tree (pot) . each node of a pot represents an atomic-operation in terms of the information-retrieval-engine and can be interpreted and processed by the information-retrieval-engine . the result-set is given back to the xquery engine , which in turn transforms the result into an xml-document of the form being required by the user-interface . the final result in xml is returned back to the user interface.our approach has the following useful aspects . first , any user-interface that generates xquery is able to access any digital-library-system including our xquery engine . second , we define a set of primitive operations for pots so that they can become a standard interface between an xquery engine and an information-retrieval-engine for our generic digital-library-system that supports xml-documents . third , some query optimizations over pots can be done in the xquery engine so that better searching performance is expected.currently we are developing an xquery engine prototype . it will be installed inside an mpeg-7_based digital-library-system that supports content-based-searching for images . the xquery specification is an ongoing working draft and is not completed yet . since the current version of the xquery specification does not define full functions for information-retrieval , we need to extend xquery syntax by adding some functions such as rankby (-rrb- .